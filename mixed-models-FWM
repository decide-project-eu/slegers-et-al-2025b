
---
title: "mixed-models-FWM"
output:
  html_document:
    toc: true
---


```{r}
library(sparklyr)

# create a sparklyr connection
sc <- spark_connect(method = "databricks")
```


```{r}
%scala
spark.sparkContext.hadoopConfiguration.set(
  "fs.azure.account",
  "key"
)
```


```{r}
df <- spark_read_parquet(sc,
                                 "df.parquet",
                                 memory = FALSE,
                                 header = TRUE)
```


```{r}
library(ggplot2)
library(dplyr)
library(lme4)
```


```{r}
AnalysisData <- df %>%
  collect() %>%
  select(-c(FPL, DrugList, DrugListIncomplete, ProductList, DDList, MgActiveMoleculeList, TherapyIndexList, MgActiveMoleculePerKgMeatList, PercentMale, RejectedM, RejectedF, AvgMinTemp, AvgMaxTemp, AvgPrecipitation, TotalMortalityLag1, FirstWeekMortalityLag1, NumberOfAntibioticsLag1, FCRLag1, DailyGainLag1, FPLLag1, RejectedFLag1, RejectedMLag1, StockingDensityLag1, AvgMinTempLag1, AvgMaxTempLag1, Colour, CropId)) %>%
  mutate(
    SurfaceSQm = SurfaceSQm / 1000,
    StartSize = as.integer(round(NumberProcessed/(1-(TotalMortality/100)), 0)),
    BirdsDeadWeek1 = round(FirstWeekMortality/100 * StartSize, 0),
    MortalityAfterWeek1 = TotalMortality - FirstWeekMortality,
    BirdsDeadAfterWeek1 = round((TotalMortality - FirstWeekMortality)/100 * StartSize, 0),
    PercentFemale = ifelse(is.na(PercentFemale), "unsexed",
                           ifelse(PercentFemale >99.99, "female",
                                  ifelse(PercentFemale <50, "majority_male",
                                  "majority_female"))),
    PercentFemale = factor(PercentFemale, levels = c("unsexed", "majority_male", "majority_female", "female")),
    Female = ifelse(Sex == "F", 1, 0),
    HatchWeekIntermediate = ceiling(Week - (FinalAge / 7)),
    HatchWeek = ifelse(
      HatchWeekIntermediate > 0, HatchWeekIntermediate,    # round up because week of slaughter is always assumed start of week
      52 + HatchWeekIntermediate),  # + because they are negative
    HatchYear = ifelse(
      HatchWeekIntermediate > 0, Year,
      Year - 1),
    SeasonHatch = ifelse(
      ((HatchWeek >= 49 ) | (HatchWeek <= 8)), "winter",
      ifelse(
        ((HatchWeek >= 9 ) & (HatchWeek <= 22)), "spring",
        ifelse(
          ((HatchWeek >= 23 ) & (HatchWeek <= 35)), "summer",
          "autumn"
          )
      )
    ),
    SeasonHatch = factor(SeasonHatch, levels = c("winter", "spring", "summer", "autumn")),
    YearTwoGroups = ifelse(
      ((HatchWeek >= 49 ) & (HatchYear == 2020)), 1,
      ifelse(
        ((HatchWeek < 49 ) & (HatchYear == 2021)), 1,
        ifelse(
          ((HatchWeek >= 49 ) & (HatchYear == 2021)), 2,
          ifelse(
            ((HatchWeek < 49 ) & (HatchYear == 2022)), 2,
            NA)
    ))),
    SeasonSlaughter = ifelse(
      ((Week >= 49 ) | (Week <= 8)), "winter",
      ifelse(
        ((Week >= 9 ) & (Week <= 22)), "spring",
        ifelse(
          ((Week >= 23 ) & (Week <= 35)), "summer",
          "autumn"
          )
      )
    ),
    YearSeasonSlaughter = paste0(as.character(Year), SeasonSlaughter),
    Breed = case_when(
        Breed == "R" ~ "Ross",
        Breed == "U" ~ "Cobb",
        is.na(Breed) ~ "Unknown",
        TRUE ~ "Unknown"
    )
  ) %>%
  rename(Farm = FarmId) %>%
  filter(
    Sex != "M",
    TotalMortality > FirstWeekMortality,
    FirstWeekMortality != 0, #removes 2 entries
    DailyGain > 0,   #removes one 0 value
    FinalAge < 60 # removes 1 entry
  ) %>%
  mutate(
    Farm = factor(Farm)
  ) %>%
  select(-HatchWeekIntermediate) %>%
  filter(!is.na(YearTwoGroups))
```

```{r}
%md
# Factors associated with first-week mortality
```


```{r}
model1 <- glmmTMB::glmmTMB(BirdsDeadWeek1 ~
                             factor(YearTwoGroups) +
                             SeasonHatch +
                             PercentFemale + #groups
                             scale(StockingDensity) +
                             scale(StartSize) +
                             offset(log(StartSize)) + (1|Farm),
                 data = AnalysisData,
                 family = glmmTMB::nbinom2,
                 control = glmmTMB::glmmTMBControl(optCtrl=list(iter.max=1e3,eval.max=1e3))
                )
drop1(model1)
```


```{r}
model2 <- glmmTMB::glmmTMB(BirdsDeadWeek1 ~
                             factor(YearTwoGroups) +
                             SeasonHatch +
                             PercentFemale + #groups
                             scale(StartSize) +
                             offset(log(StartSize)) + (1|Farm),
                 data = AnalysisData,
                 family = glmmTMB::nbinom2,
                 control = glmmTMB::glmmTMBControl(optCtrl=list(iter.max=1e3,eval.max=1e3))
                )
drop1(model2)
```

```{r}
model4 <- glmmTMB::glmmTMB(BirdsDeadWeek1 ~
                             factor(YearTwoGroups) +
                             SeasonHatch +        # <--
                             PercentFemale + #groups
                             offset(log(StartSize)) + (1|Farm),
                 data = AnalysisData,
                 family = glmmTMB::nbinom2,
                 control = glmmTMB::glmmTMBControl(optCtrl=list(iter.max=1e3,eval.max=1e3))
                )
drop1(model4)
```


```{r}
model5 <- glmmTMB::glmmTMB(BirdsDeadWeek1 ~
                             factor(YearTwoGroups) +
                             PercentFemale + #groups
                             offset(log(StartSize)) + (1|Farm),
                 data = AnalysisData,
                 family = glmmTMB::nbinom2,
                 control = glmmTMB::glmmTMBControl(optCtrl=list(iter.max=1e3,eval.max=1e3))
                )
drop1(model5)
```


```{r}
summary(model5)
```

```{r}
# ICC: farm variation
performance::icc(model5)
```


```{r}
library(lsmeans)
```


```{r}
ls <- lsmeans(model5, pairwise ~ PercentFemale, type = "response", offset = 0)
summary(ls)
```
